name: zn_download_files

on:
  workflow_dispatch:
#  schedule:
#    - cron: '0 */4 * * *'  # Ejecutar cada 4 horas, en el minuto 0

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Establece un tiempo máximo de ejecución

    env:
      ZERONET_ADDRESS_1: 18cZ4ehTarf34TCxntYDx9T2NHXiBvsVie  # Dirección para eventos.html
      ZERONET_ADDRESS_2: 1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU  # Dirección para lista-ott.m3u
      OUTPUT_FOLDER: zn_downloads  # Carpeta de destino
      OUTPUT_FILE: eventos.html  # Nombre del archivo para eventos.html

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          set -e  # Detener el script si hay un error
          echo "Installing system dependencies"
          sudo apt-get update
          sudo apt-get install -y wget tar curl python3 python3-pip
          echo "Dependencies installed"

      - name: Download and extract ZeroNet
        run: |
          set -e
          echo "Downloading ZeroNet"
          wget https://github.com/HelloZeroNet/ZeroNet-linux/archive/dist-linux64/ZeroNet-py3-linux64.tar.gz
          tar xvpfz ZeroNet-py3-linux64.tar.gz
          cd ZeroNet-linux-dist-linux64/
          echo "ZeroNet downloaded and extracted"

      - name: Start ZeroNet
        run: |
          set -e
          echo "Starting ZeroNet"
          cd ZeroNet-linux-dist-linux64/
          ./ZeroNet.sh &
          echo "ZeroNet started"

      - name: Verify ZeroNet is running
        run: |
          set -e
          echo "Verifying ZeroNet is running"
          sleep 5  # Espera 5 segundos para asegurar que ZeroNet esté listo
          curl -I http://127.0.0.1:43110
          echo "ZeroNet verification complete"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Usa una versión compatible con Playwright

      - name: Install Playwright
        run: |
          npm install playwright

      - name: Install Playwright browsers
        run: |
          npx playwright install

      - name: Extract dynamic content with Playwright
        run: |
          node scripts/extract-content.js "$ZERONET_ADDRESS_1" "$OUTPUT_FOLDER" "$OUTPUT_FILE"

      - name: Check site synchronization (1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU)
        run: |
          echo "Checking site synchronization for $ZERONET_ADDRESS_2"
          curl -H "Accept: text/html" -I http://127.0.0.1:43110/$ZERONET_ADDRESS_2/
          echo "Site synchronization checked"

      - name: Download lista-ott.m3u
        run: |
          echo "Downloading http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u"
          if curl -H "Accept: text/html" -f -o $OUTPUT_FOLDER/lista-ott.m3u http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u; then
            echo "File downloaded successfully to $OUTPUT_FOLDER/lista-ott.m3u"
          else
            echo "Failed to download lista-ott.m3u: The file does not exist or the site is not fully synchronized."
            echo "Retrying in 30 seconds..."
            sleep 30
            if curl -H "Accept: text/html" -f -o $OUTPUT_FOLDER/lista-ott.m3u http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u; then
              echo "File downloaded successfully to $OUTPUT_FOLDER/lista-ott.m3u"
            else
              echo "Failed to download lista-ott.m3u after retry."
              exit 1
            fi
          fi

      - name: Check for eventos.html
        id: check_eventos
        run: |
          if [ -f $OUTPUT_FOLDER/eventos.html ]; then
            echo "eventos=true" >> $GITHUB_ENV
          else
            echo "eventos=false" >> $GITHUB_ENV
          fi

      - name: Check for lista-ott.m3u
        id: check_lista_ott
        run: |
          if [ -f $OUTPUT_FOLDER/lista-ott.m3u ]; then
            echo "lista_ott=true" >> $GITHUB_ENV
          else
            echo "lista_ott=false" >> $GITHUB_ENV
          fi

      - name: Check for changes
        id: changes
        run: |
          if [ "${{ env.eventos }}" == 'true' ]; then
            git add $OUTPUT_FOLDER/eventos.html
            echo "eventos.html detected"
          fi
          if [ "${{ env.lista_ott }}" == 'true' ]; then
            git add $OUTPUT_FOLDER/lista-ott.m3u
            echo "lista-ott.m3u detected"
          fi
          if git diff --cached --quiet; then
            echo "No changes to commit"
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: env.changes == 'true'
        run: git commit -m "Add new files"

      - name: Push changes
        if: env.changes == 'true'
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
