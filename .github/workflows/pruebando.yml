name: zz_generar_eventos_prueba

on:
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium cloudscraper

      # Instalar paquete de idioma español
      - name: Instalar paquete de idioma español
        run: |
          sudo apt-get update
          sudo apt-get install -y language-pack-es
          #sudo locale-gen es_ES.UTF-8
          sudo locale-gen --purge es_ES.UTF-8
          sudo update-locale LANG=es_ES.UTF-8

      # Configurar identidad de Git
      - name: Configurar identidad de Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Listar los archivos del repositorio y subdirectorios con detalle de fecha y hora (antes)
      - name: List repository files
        run: ls -lR

      # Ejecutar el script
      - name: Run Python script
        run: python scripts/generar_eventos.py

      # Listar los archivos del repositorio y subdirectorios con detalle de fecha y hora (después)
      - name: List repository files
        run: ls -lR

      # Mostrar el contenido del archivo de log si existe
      - name: Show debug log
        run: |
          if [ -f zz_eventos/debug_eventos.txt ]; then
            cat zz_eventos/debug_eventos.txt
          else
            echo "El archivo zz_eventos/debug_eventos.txt no existe."
          fi

      # Verificar si hay cambios en los archivos
      - name: Check for changes
        id: changes_eventos
        run: |
          git add zz_eventos/debug_eventos.txt zz_eventos/eventos.csv zz_eventos/zz_eventos_ott.m3u zz_eventos/zz_eventos_all_ott.m3u zz_eventos_ott.m3u zz_eventos_all_ott.m3u
          git status  # Verificación adicional
          if git diff --cached --quiet; then
            echo "No hay cambios para confirmar"
            echo "changes_eventos=false" >> $GITHUB_OUTPUT
          else
            echo "Cambios detectados"
            echo "changes_eventos=true" >> $GITHUB_OUTPUT
          fi

      # Pull latest changes
      # - name: Pull latest changes
      #   if: steps.changes.outputs.changes_eventos == 'true'
      #   run: git pull origin main

      # Commit y push
      - name: Commit changes
        if: steps.changes.outputs.changes_eventos == 'true'
        run: |
          echo "Archivos modificados:"
          git status
          echo "Archivos que se incluirán en el commit:"
          git diff --name-only --cached
          git commit -m "Actualización automática desde workflow"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
