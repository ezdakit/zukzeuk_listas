name: Run ZeroNet on Ubuntu

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/running_zeronet.yml

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Establece un tiempo máximo de ejecución

    env:
      ZERONET_ADDRESS_1: 18cZ4ehTarf34TCxntYDx9T2NHXiBvsVie  # Dirección para eventos.html
      ZERONET_ADDRESS_2: 1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU  # Dirección para lista-ott.m3u
      OUTPUT_FOLDER: zn_downloads  # Carpeta de destino
      OUTPUT_FILE: eventos.html  # Nombre del archivo para eventos.html

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          set -e  # Detener el script si hay un error
          echo "Installing system dependencies"
          sudo apt-get update
          sudo apt-get install -y \
            wget tar curl python3 python3-pip \
            libgtk-4-1 libgraphene-1.0-0 \
            libevent-2.1-7 libopus0 libgstreamer1.0-0 libgstreamer-plugins-base1.0-0 \
            libflite1 libharfbuzz-icu0 libsecret-1-0 libhyphen0 \
            libmanette-0.2-0 libgles2
          echo "System dependencies installed"

      - name: Download and extract ZeroNet
        run: |
          set -e
          echo "Downloading ZeroNet"
          wget https://github.com/HelloZeroNet/ZeroNet-linux/archive/dist-linux64/ZeroNet-py3-linux64.tar.gz
          tar xvpfz ZeroNet-py3-linux64.tar.gz
          cd ZeroNet-linux-dist-linux64/
          echo "ZeroNet downloaded and extracted"

      - name: Start ZeroNet
        run: |
          set -e
          echo "Starting ZeroNet"
          cd ZeroNet-linux-dist-linux64/
          ./ZeroNet.sh &
          echo "ZeroNet started"

      - name: Verify ZeroNet is running
        run: |
          set -e
          echo "Verifying ZeroNet is running"
          sleep 5  # Espera 5 segundos para asegurar que ZeroNet esté listo
          curl -I http://127.0.0.1:43110
          echo "ZeroNet verification complete"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Usa una versión compatible con Playwright

      - name: Install Playwright
        run: |
          npm install playwright

      - name: Install Playwright browsers
        run: |
          npx playwright install

      - name: Extract and download content
        run: |
          node extract-content.js "$ZERONET_ADDRESS_1" "$ZERONET_ADDRESS_2" "$OUTPUT_FOLDER" "$OUTPUT_FILE"

      - name: Commit and push files
        if: success()  # Solo ejecutar si el paso anterior fue exitoso
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add "$OUTPUT_FOLDER/$OUTPUT_FILE" "$OUTPUT_FOLDER/lista-ott.m3u"
          git commit -m "Actualizar $OUTPUT_FILE y lista-ott.m3u desde ZeroNet"
          git push
