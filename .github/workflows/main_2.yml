name: procesar_eventos

on:
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Configurar el entorno
      - name: Checkout repository
        uses: actions/checkout@v3

      # Ejecutar ZeroNet en un contenedor Docker
      - name: Run ZeroNet with Docker
        run: |
          docker run -d \
            --name zeronet \
            -p 43110:43110 \
            nofish/zeronet

          # Esperar a que ZeroNet se inicie
          sleep 10

      # Verificar si ZeroNet est치 en ejecuci칩n
      - name: Check if ZeroNet is running
        run: |
          docker ps -f name=zeronet --format "table {{.Names}}\t{{.Status}}"
          docker logs zeronet  # Mostrar logs de ZeroNet

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Install Firefox
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox

      - name: Install Geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.32.0/geckodriver-v0.32.0-linux64.tar.gz
          tar -xvzf geckodriver-v0.32.0-linux64.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/

      - name: Run Python script
        run: python descargar_nuevos_eventos_2.py

      # Mostrar el contenido del archivo code_iframe.txt
      - name: Show code_iframe.txt content
        run: cat code_iframe.txt

      - name: Configurar identidad de Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Add changes
        run: git add code.txt debug_eventos.txt code_iframe.txt code_iframe_old.txt eventos.csv zz_eventos_ott.m3u zz_eventos_all_ott.m3u

      - name: Commit changes
        run: git commit -m "Actualizaci칩n autom치tica de eventos" || echo "No hay cambios para confirmar"

      #- name: Pull cambios recientes con rebase
      #  run: git pull origin main --rebase

      - name: Push changes
        run: git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Detener y eliminar el contenedor
      - name: Clean up Docker container
        if: always()  # Ejecutar este paso incluso si fallan los anteriores
        run: |
          docker stop zeronet || true
          docker rm zeronet || true
