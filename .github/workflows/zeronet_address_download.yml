name: zeronet_address_download_testing

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      OUTPUT_FOLDER: testing
      ZERONET_ADDRESS_1: 18cZ4ehTarf34TCxntYDx9T2NHXiBvsVie
      ZERONET_ADDRESS_2: 1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU
      ZERONET_ADDRESS_3: 13eNqJiWACUUuFM37xwUwmRiCuyMd6X2tS
      ZERONET_ADDRESS_4: 1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU
      OUTPUT_FILE_1: tokio_ace
      OUTPUT_FILE_2: lista_ott
      OUTPUT_FILE_3: tokio_no_ace
      OUTPUT_FILE_4: new_all

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          set -e
          echo "Installing system dependencies"
          sudo apt-get update
          sudo apt-get install -y wget tar curl python3 python3-pip xvfb
          echo "Dependencies installed"

      - name: Download and extract ZeroNet
        run: |
          set -e
          echo "Downloading ZeroNet"
          wget https://github.com/HelloZeroNet/ZeroNet-linux/archive/dist-linux64/ZeroNet-py3-linux64.tar.gz
          tar xvpfz ZeroNet-py3-linux64.tar.gz
          cd ZeroNet-linux-dist-linux64/
          echo "ZeroNet downloaded and extracted"

      - name: Start ZeroNet
        run: |
          set -e
          echo "Starting ZeroNet"
          cd ZeroNet-linux-dist-linux64/
          ./ZeroNet.sh &
          echo "ZeroNet started"

      - name: Verify ZeroNet is running
        run: |
          set -e
          echo "Verifying ZeroNet is running"
          sleep 5
          curl -I http://127.0.0.1:43110
          echo "ZeroNet verification complete"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright
        run: |
          npm install playwright

      - name: Install Playwright browsers
        run: |
          npx playwright install

      - name: Check site ZERONET_ADDRESS synchronization
        run: |
          echo "Checking site synchronization for $ZERONET_ADDRESS_4"
          curl -H "Accept: text/html" -I http://127.0.0.1:43110/$ZERONET_ADDRESS_4/
          echo "Site ZERONET_ADDRESS synchronization checked"

      - name: Extract iframe src from ZeroNet address
        run: |
          curl -H "Accept: text/html" --connect-timeout 10 --max-time 30 -s "http://127.0.0.1:43110/${{ env.ZERONET_ADDRESS_4 }}" -o content.html
          cat content.html
          ADDRESS=$(grep -oP '(?<=address = ")[^"]*' content.html)
          WRAPPER_NONCE=$(grep -oP '(?<=wrapper_nonce = ")[^"]*' content.html)
          SRC="${ADDRESS}/?wrapper_nonce=${WRAPPER_NONCE}"
          echo "Extracted src: $SRC"
          echo "iframe url:"
          echo "http://127.0.0.1:43110/${SRC}"
          node testing/zeronet_iframe_download.js "http://127.0.0.1:43110/${SRC}"

      - name: Check for file changes
        id: check_changes
        run: |
          cambios=$(git status --porcelain $OUTPUT_FOLDER)
          if [ -n "$cambios" ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
            echo "Files changed:"
            echo "$cambios"
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Add and commit changes
        if: env.changes_detected == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add $OUTPUT_FOLDER/
          git commit -m "Actualización automática de archivos"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
