name: zn_download_files_testing

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      ZERONET_ADDRESS_1: 18cZ4ehTarf34TCxntYDx9T2NHXiBvsVie
      ZERONET_ADDRESS_2: 1H3KoazXt2gCJgeD8673eFvQYXG7cbRddU
      OUTPUT_FOLDER: zn_downloads
      OUTPUT_FILE: eventos.html

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Backup original files
        run: |
          mkdir -p $OUTPUT_FOLDER
          cp $OUTPUT_FOLDER/eventos.html $OUTPUT_FOLDER/eventos.html.orig 2>/dev/null || true
          cp $OUTPUT_FOLDER/lista-ott.m3u $OUTPUT_FOLDER/lista-ott.m3u.orig 2>/dev/null || true

      - name: Install system dependencies
        run: |
          set -e
          echo "Installing system dependencies"
          sudo apt-get update
          sudo apt-get install -y wget tar curl python3 python3-pip
          echo "Dependencies installed"

      - name: Download and extract ZeroNet
        run: |
          set -e
          echo "Downloading ZeroNet"
          wget https://github.com/HelloZeroNet/ZeroNet-linux/archive/dist-linux64/ZeroNet-py3-linux64.tar.gz
          tar xvpfz ZeroNet-py3-linux64.tar.gz
          cd ZeroNet-linux-dist-linux64/
          echo "ZeroNet downloaded and extracted"

      - name: Start ZeroNet
        run: |
          set -e
          echo "Starting ZeroNet"
          cd ZeroNet-linux-dist-linux64/
          ./ZeroNet.sh &
          echo "ZeroNet started"

      - name: Verify ZeroNet is running
        run: |
          set -e
          echo "Verifying ZeroNet is running"
          sleep 5
          curl -I http://127.0.0.1:43110
          echo "ZeroNet verification complete"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright
        run: |
          npm install playwright

      - name: Install Playwright browsers
        run: |
          npx playwright install

      - name: Extract dynamic content with Playwright
        run: |
          node scripts/extract-content.js "$ZERONET_ADDRESS_1" "$OUTPUT_FOLDER" "$OUTPUT_FILE"

      - name: Check site synchronization
        run: |
          echo "Checking site synchronization for $ZERONET_ADDRESS_2"
          curl -H "Accept: text/html" -I http://127.0.0.1:43110/$ZERONET_ADDRESS_2/
          echo "Site synchronization checked"

      - name: Download lista-ott.m3u
        run: |
          set +e
          echo "Downloading http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u"
          curl -H "Accept: text/html" -f -o $OUTPUT_FOLDER/lista-ott.m3u http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u
          curl_exit_code=$?
          if [ $curl_exit_code -ne 0 ]; then
            echo "Retrying download..."
            sleep 30
            curl -H "Accept: text/html" -f -o $OUTPUT_FOLDER/lista-ott.m3u http://127.0.0.1:43110/$ZERONET_ADDRESS_2/lista-ott.m3u || true
          fi
          set -e

      - name: Generate diff files
        run: |
          echo "Checking eventos.html files"
          ls -l $OUTPUT_FOLDER/eventos.html.orig
          ls -l $OUTPUT_FOLDER/eventos.html
          if [ -f "$OUTPUT_FOLDER/eventos.html.orig" ] && [ -f "$OUTPUT_FOLDER/eventos.html" ]; then
            diff_output=$(diff $OUTPUT_FOLDER/eventos.html.orig $OUTPUT_FOLDER/eventos.html)
            if [ -n "$diff_output" ]; then
              echo "$diff_output" > $OUTPUT_FOLDER/eventos.diff
            else
              echo "No changes in eventos.html"
            fi
          fi
          
          echo "Checking lista-ott.m3u files"
          ls -l $OUTPUT_FOLDER/lista-ott.m3u.orig
          ls -l $OUTPUT_FOLDER/lista-ott.m3u
          if [ -f "$OUTPUT_FOLDER/lista-ott.m3u.orig" ] && [ -f "$OUTPUT_FOLDER/lista-ott.m3u" ]; then
            diff_output=$(diff $OUTPUT_FOLDER/lista-ott.m3u.orig $OUTPUT_FOLDER/lista-ott.m3u)
            if [ -n "$diff_output" ]; then
              echo "$diff_output" > $OUTPUT_FOLDER/lista-ott.diff
            else
              echo "No changes in lista-ott.m3u"
            fi
          fi

      - name: Check for file changes
        id: check_changes
        run: |
          cambios=$(git status --porcelain $OUTPUT_FOLDER)
          if [ -n "$cambios" ]; then
            echo "changes_detected=true" >> $GITHUB_ENV
            echo "Files changed:"
            echo "$cambios"
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Add and commit changes
        if: env.changes_detected == 'true'
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add $OUTPUT_FOLDER/
          git commit -m "Actualización automática de archivos"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger downstream workflows
        if: env.changes_detected == 'true'
        run: |
          if [ -f "$OUTPUT_FOLDER/eventos.diff" ]; then
            curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"procesar_eventos"}'
          fi
          
          if [ -f "$OUTPUT_FOLDER/lista-ott.diff" ]; then
            curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d '{"event_type":"process_downloaded_files"}'
          fi
