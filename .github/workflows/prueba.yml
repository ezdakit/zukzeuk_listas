name: prueba
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/prueba.yml
      - prueba.py

jobs:
  run-zeronet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          echo "Updating package lists"
          sudo apt-get update
          echo "Installing Python and pip"
          sudo apt-get install -y python3 python3-pip tor
          echo "Installing obfs4proxy"
          sudo apt-get install -y obfs4proxy
          echo "Installing Selenium and requests"
          pip3 install selenium requests
          echo "Installing Chromium and Chromedriver"
          sudo apt-get install -y chromium-chromedriver
          if [ ! -f /usr/bin/chromedriver ]; then
            sudo ln -s /usr/lib/chromium-browser/chromedriver /usr/bin/chromedriver
            echo "Creating symlink for Chromedriver"
          fi

      - name: Configure Tor bridges
        run: |
          echo "Configuring Tor bridges"
          echo "UseBridges 1" | sudo tee -a /etc/tor/torrc
          echo "ClientTransportPlugin obfs4 exec /usr/bin/obfs4proxy" | sudo tee -a /etc/tor/torrc
          echo "Bridge obfs4 98.118.127.54:9002 E3879CB1EFC2D308DAAA491D985219AF3EDEE8B9 cert=EY+saO6Z/Q9jNaa7PvFcnqH6CmimyfaKAvCI3kUyidC7EJtAy/UxxeSok+YFM1ElHdfUbg iat-mode=0" | sudo tee -a /etc/tor/torrc
          sudo service tor restart

      - name: Configure ZeroNet for logging and trackers
        run: |
          echo "Configuring ZeroNet for logging and trackers"
          sudo mkdir -p /etc/zeronet
          echo "log_dir = /var/log/zeronet" | sudo tee -a /etc/zeronet/zeronet.conf
          echo "log_level = DEBUG" | sudo tee -a /etc/zeronet/zeronet.conf
          echo "tracker = http://tracker.opentrackr.org:1337/announce" | sudo tee -a /etc/zeronet/zeronet.conf
          echo "tracker = udp://tracker.openbittorrent.com:80" | sudo tee -a /etc/zeronet/zeronet.conf
          echo "tracker = udp://tracker.opentrackr.org:1337/announce" | sudo tee -a /etc/zeronet/zeronet.conf

      - name: Run ZeroNet with Docker
        run: |
          docker run -d \
            --name zeronet \
            -p 43110:43110 \
            -v /etc/zeronet/zeronet.conf:/root/.zeronet/zeronet.conf \
            --log-driver json-file \
            --log-opt max-size=10m \
            nofish/zeronet

      - name: Wait for ZeroNet to start
        run: sleep 20  # Aumentar el tiempo de espera

      - name: Run Python script
        run: python3 prueba.py

      - name: Collect ZeroNet logs
        run: |
          docker exec zeronet sh -c 'cat /var/log/zeronet/*' > zeronet_logs.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            pantallazos/
            zeronet_logs.txt
