name: zz_generar_eventos

on:
  push:
    branches:
      - main  # Solo se activa en la rama main
    paths:
      - zn_downloads/eventos.html  # Solo se activa si cambia este archivo
  workflow_dispatch:  # Permite la ejecución manual del workflow

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio en la rama zz_eventos
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: zz_eventos  # Trabajar en la rama zz_eventos

      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium cloudscraper

      # Instalar paquete de idioma español
      - name: Instalar paquete de idioma español
        run: |
          sudo apt-get update
          sudo apt-get install -y language-pack-es
          sudo locale-gen es_ES.UTF-8
          sudo update-locale LANG=es_ES.UTF-8

      # Configurar identidad de Git
      - name: Configurar identidad de Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Resetear zz_eventos al estado de main (hard reset)
      - name: Reset zz_eventos to main
        run: |
          git pull --rebase
          git reset --hard origin/main  # Resetear zz_eventos al estado de main
          git push

      # Ejecutar el script
      - name: Run Python script
        run: python scripts/generar_eventos.py

      # Añadir cambios
      - name: Add changes
        run: |
          git add zz_eventos/debug_eventos.txt zz_eventos/eventos.csv zz_eventos/zz_eventos_ott.m3u zz_eventos/zz_eventos_all_ott.m3u zz_eventos_ott.m3u zz_eventos_all_ott.m3u

      # Verificar si hay cambios
      - name: Check for changes
        id: changes
        run: |
          if git diff --cached --quiet; then
            echo "No hay cambios para confirmar"
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "Cambios detectados"
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      # Commit y push en zz_eventos
      - name: Commit changes in zz_eventos
        if: steps.changes.outputs.changes == 'true'
        run: |
          git commit -m "Actualización automática de eventos"
          git pull origin zz_eventos --rebase  # Incorporar cambios remotos y aplicar los locales encima
          git push origin zz_eventos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Merge de zz_eventos en main (forzado)
      - name: Merge zz_eventos into main (forced)
        if: steps.changes.outputs.changes == 'true'
        run: |
          git fetch origin main  # Obtener la rama main
          git checkout main     # Cambiar a la rama main
          git merge zz_eventos --no-ff -m "Merge zz_eventos into main (forced)"  # Fusionar cambios de zz_eventos en main
          git push origin main --force  # Hacer push forzado a main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
