name: zz_generar_eventos

on:
  workflow_call:
  repository_dispatch:
    types: [procesar_eventos]  # Tipo de evento personalizado

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 selenium cloudscraper

      # Instalar paquete de idioma español
      - name: Instalar paquete de idioma español
        run: |
          sudo apt-get update
          sudo apt-get install -y language-pack-es
          sudo locale-gen es_ES.UTF-8
          sudo update-locale LANG=es_ES.UTF-8

      # Configurar identidad de Git
      - name: Configurar identidad de Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Ejecutar el script
      - name: Run Python script
        run: python scripts/generar_eventos.py

      # Añadir cambios
      - name: Add changes
        run: |
          git add zz_eventos/debug_eventos.txt zz_eventos/eventos.csv zz_eventos/zz_eventos_ott.m3u zz_eventos/zz_eventos_all_ott.m3u zz_eventos_ott.m3u zz_eventos_all_ott.m3u

      # Verificar si hay cambios
      #- name: Check for changes
      #  id: changes
      #  run: |
      #    if git diff --cached --quiet; then
      #      echo "No hay cambios para confirmar"
      #      echo "changes=false" >> $GITHUB_OUTPUT
      #    else
      #      echo "Cambios detectados"
      #      echo "changes=true" >> $GITHUB_OUTPUT
      #    fi

      - name: Check for changes using git status
        id: check_changes
        run: |
          changes_detected=$(git status --porcelain $OUTPUT_FOLDER)
          if [ -z "$changes_detected" ]; then
            echo "No changes detected"
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "Changes detected:"
            echo "$changes"
            echo "changes=true" >> $GITHUB_ENV
          fi

      # Pull latest changes
      - name: Pull latest changes
        if: steps.changes.outputs.changes == 'true'
        run: git pull origin main

      # Commit y push
      - name: Commit changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git commit -m "Actualización automática de eventos"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
